!function(e){var n={};function t(a){if(n[a])return n[a].exports;var l=n[a]={i:a,l:!1,exports:{}};return e[a].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:a})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./src/client/js/twitchtv.js")}({"./src/client/js/twitchtv.js":
/*!***********************************!*\
  !*** ./src/client/js/twitchtv.js ***!
  \***********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _twitchtv = __webpack_require__(/*! ../scss/twitchtv.scss */ "./src/client/scss/twitchtv.scss");\n\nvar _twitchtv2 = _interopRequireDefault(_twitchtv);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//variable keeps track of the current view and target view - featured, all, online or offline\nvar mode = "featured";\nvar target = "";\n\n//this function calls functions for api - function also hides and reveals html already created and updated i.e. api has already been called\nfunction getChannelData(e) {\n  var channelsArr = ["ESL_SC2", "OgamingSC2", "cretetion", "freecodecamp", "storbeck", "habathcx", "RobotCaleb", "noobs2ninjas"];\n  var type = "streams";\n  if (e === "featured") {\n    target = "featured";\n  } else {\n    target = e.target.className.split(" ")[1];\n  }\n  console.log($(\'input[type="search"]\').val());\n  switch (target) {\n    case "featured":\n      $(".channel-list").empty();\n      callTwitchAPI(type, "featured");\n      break;\n    case "all":\n    case "online":\n    case "offline":\n      if (mode !== target && mode == "featured" || target !== "online" && target !== "offline") {\n        // empties the channel-list - place here as we only want this to run once and not be caught in the forEach loop\n        $(".channel-list").empty();\n        channelsArr.forEach(function (channel) {\n          callTwitchAPI(type, channel);\n        });\n      } else {\n        updateHTML(undefined);\n      }\n      break;\n    case "search":\n      $(".channel-list").empty();\n\n      callTwitchAPI(type, $(\'input[type="search"]\').val());\n      break;\n  }\n  mode = target;\n}\n\nfunction callTwitchAPI(type, query) {\n  console.log(query);\n  $.getJSON("https://wind-bow.gomix.me/twitch-api/" + type + "/" + query + "?callback=?", function (response) {\n    console.log(response);\n    //call all data and hide with css rather than making a call with every click of a menu button and ignoring the items not relevant to the mode - online, offline, etc\n    if (response.featured === undefined && response._id === undefined && response.stream === null) {\n      //call different twitch API method if channel is offline to get channel info\n      callTwitchAPI("channels", query);\n    } else {\n      if (response !== undefined) {\n        if (target == "featured") {\n          response.featured.forEach(function (response) {\n            updateHTML(createHTMLObj(response));\n          });\n        } else {\n          updateHTML(createHTMLObj(response));\n        }\n      }\n    }\n  });\n}\n\n//takes Twitch API response data and creates object to be passed to update HTML function\nfunction createHTMLObj(channelData) {\n  var htmlObj = {\n    channelLink: "",\n    streamLink: "",\n    logoSrc: "",\n    channelName: "",\n    status: "",\n    game: "",\n    description: "",\n    previewSrc: "",\n    channelClasses: ""\n  };\n  var channel = channelData;\n  if (channel.stream !== undefined) {\n    channel = channelData.stream.channel;\n    htmlObj.previewSrc = channelData.stream.preview.medium;\n    htmlObj.streamLink = channelData.stream._links.self;\n    htmlObj.status = "Online";\n    htmlObj.channelClasses = "online-channel";\n  } else {\n    htmlObj.status = "Offline";\n    htmlObj.channelClasses = "offline-channel";\n  }\n  htmlObj.channelLink = channel.url;\n  htmlObj.logoSrc = channel.logo;\n  htmlObj.channelName = channel.display_name;\n  htmlObj.game = channel.game;\n  htmlObj.description = channel.status;\n\n  if (htmlObj.previewSrc === "") {\n    htmlObj.previewSrc = "https://puregaming.es/wp-content/uploads/2017/02/maxresdefault-1-2-397x310_c.jpg";\n  }\n  if (htmlObj.logoSrc === null) {\n    htmlObj.logoSrc = "https://puregaming.es/wp-content/uploads/2017/02/maxresdefault-1-2-397x310_c.jpg";\n  }\n  if (htmlObj.game === null) {\n    htmlObj.game = "...";\n  }\n  if (htmlObj.description === null) {\n    htmlObj.description = "";\n  }\n  return htmlObj;\n}\n\n//takes HTML object properties and populates HTML channel list\nfunction updateHTML(htmlObj) {\n  var scrollBarColor;\n  if (htmlObj !== undefined && htmlObj.channelName !== undefined) {\n    $(".channel-list").append(\'<li class="channel-item \' + htmlObj.channelClasses + \'"><img class="channel-logo" src="\' + htmlObj.logoSrc + \'"/><div><a target="_blank" href="\' + htmlObj.channelLink + \'"><h3>\' + htmlObj.channelName + \'</h3></a><span class="status">\' + htmlObj.status + "</span><p>Game: " + htmlObj.game + "</p><p>" + htmlObj.description + \'</p></div><a class="preview" href="\' + htmlObj.streamLink + \'"><img src="\' + htmlObj.previewSrc + \'"/></a></li>\');\n  } else if (htmlObj.channelName == undefined) {\n    $(".channel-list").append(\'<p>Sorry! No results were found for that user name<p>\');\n  }\n  switch (target) {\n    case "featured":\n      $(".tv-screen > h2").html("Featured Live Streams");\n      scrollBarColor = "#FFC300";\n      $(".tv-screen").removeClass("all online offline").addClass("featured");\n      break;\n    case "all":\n      $(".tv-screen > h2").html("All Favourite Streamers");\n      scrollBarColor = "#2ABCE0";\n      $(".tv-screen").removeClass("featured online offline").addClass("all");\n      $(".channel-item").removeClass("hide");\n      break;\n    case "online":\n      $(".tv-screen > h2").html("Live Favourite Streamers");\n      scrollBarColor = "#94E661";\n      $(".tv-screen").removeClass("featured all offline").addClass("online");\n      $(".offline-channel").addClass("hide");\n      $(".online-channel").removeClass("hide");\n      break;\n    case "offline":\n      $(".tv-screen > h2").html("Offline Favourite Streamers");\n      scrollBarColor = "#C65B7C";\n      $(".tv-screen").removeClass("featured online all").addClass("offline");\n      $(".online-channel").addClass("hide");\n      $(".offline-channel").removeClass("hide");\n      break;\n    case "search":\n      $(".tv-screen > h2").html("Search Results...");\n  }\n  //change colour of scrollbar using root CSS variable\n  document.documentElement.style.setProperty("--scrollbar_color", scrollBarColor);\n}\n\n$(document).ready(function () {\n  getChannelData("featured");\n  $(".menu-item").click(getChannelData);\n\n  $(".search-form").on("submit", function (e) {\n    e.preventDefault();\n    getChannelData(e);\n  });\n});\n\n//# sourceURL=webpack:///./src/client/js/twitchtv.js?')},"./src/client/scss/twitchtv.scss":
/*!***************************************!*\
  !*** ./src/client/scss/twitchtv.scss ***!
  \***************************************/
/*! no static exports found */function(module,exports){eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/client/scss/twitchtv.scss?")}});