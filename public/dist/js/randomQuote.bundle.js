!function(n){var e={};function t(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return n[o].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=n,t.c=e,t.d=function(n,e,o){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:o})},t.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="./src/client/js/randomquote.js")}({"./src/client/js/randomquote.js":
/*!**************************************!*\
  !*** ./src/client/js/randomquote.js ***!
  \**************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _randomquote = __webpack_require__(/*! ../scss/randomquote.scss */ "./src/client/scss/randomquote.scss");\n\nvar _randomquote2 = _interopRequireDefault(_randomquote);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getQuote(firstLoad) {\n  //Fades out text and fades in loading text\n  if (firstLoad == "false") {\n    $("#quote").animate({ opacity: 0 }, 100);\n    $("#quote-author").animate({ opacity: 0 }, 100);\n    $("#text").text("Loading...");\n    $("#quote").animate({ opacity: 1 }, 1000);\n  }\n  // Get quote function on page load and button click.\n  fetch(\'/randomquote/newquote\').then(function (response) {\n    return response.json();\n  }).then(function (jsonObj) {\n    //fades out loading text\n    $("#quote").animate({ opacity: 0 }, 100);\n    //timeout set so that loading text does not appear when element fades in\n    setTimeout(function () {\n      $("#text").html(jsonObj.quote);\n      if (jsonObj.author == "") {\n        $("#quote-author").html("<i>Anon</i>");\n      } else {\n        $("#quote-author").html("<i>" + jsonObj.author + "</i>");\n      }\n      $(\'#tweet-link\').attr(\'href\', \'https://twitter.com/intent/tweet?hashtags=quotes&text=\' + encodeURIComponent(jsonObj.quote + \' -\' + jsonObj.author));\n    }, 1000);\n    //Fades quote text back in after successful call to api\n    setTimeout(function () {\n      $("#quote").animate({ opacity: 1 }, 2000);\n      $("#quote-author").animate({ opacity: 1 }, 2000);\n    }, 1000);\n  });\n}\n\n// Func declare - Reset Trianglify on window resize and apply to existing canvas element - with delay\n//Developed by Adam Tarrant - 2018\n\nvar currentColour;\nfunction updateBg(changeCol) {\n\n  // Declare theme colour variables\n  var colours = ["YlGn", "Purples", "OrRd", "YlGnBu", "GnBu", "Oranges", "BuGn", "PuBuGn", "PuBu", "Blues", "PiYG", "PuOr", "YlOrRd", "Greens", "RdBu", "YlOrBr", "PuRd"];\n  var textCol = ["#00AF56", "#AD4FE1", "#F86B4D", "#32A087", "#35AA78", "#F58F00", "#00A36E", "#027399", "#533FE6", "#204C85", "#9D1B70", "#D54141", "#E97B00", "#24B42D", "#6C3A70", "#AC4702", "#C11A55"];\n  if (changeCol == "true") {\n    var changedCol = Math.floor(Math.random() * colours.length);\n    currentColour = changedCol;\n  } else {\n    var changedCol = currentColour;\n  }\n  var pattern = Trianglify({\n    height: document.documentElement.clientHeight,\n    width: window.innerWidth,\n    x_colors: colours[changedCol],\n    cell_size: 40\n  });\n  if ($("canvas").length) {\n    document.body.appendChild(pattern.canvas(document.querySelector("canvas")));\n  } else {\n    document.body.appendChild(pattern.canvas());\n  }\n  $("body").animate({ color: textCol[changedCol] }, 500);\n  $(".button").animate({ \'background-color\': textCol[changedCol] }, 500);\n}\n\n$(document).ready(function () {\n  //Initial call of getQuote func and click to getQuote which also updates background colour - Uses Trianglify library to create textured background\n  getQuote();\n  updateBg("true");\n  $("#get-quote").on("click", function (e) {\n    getQuote("false");\n  });\n  $("#get-quote").on("click", function (e) {\n    updateBg("true");\n  });\n  //Reset Trianglify on window resize and apply to existing canvas element - with delay\n  $(window).resize(function () {\n    clearTimeout(window.resizedFinished);\n    window.resizedFinished = setTimeout(function () {\n      updateBg();\n    }, 200);\n  });\n});\n\n//# sourceURL=webpack:///./src/client/js/randomquote.js?')},"./src/client/scss/randomquote.scss":
/*!******************************************!*\
  !*** ./src/client/scss/randomquote.scss ***!
  \******************************************/
/*! no static exports found */function(module,exports){eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/client/scss/randomquote.scss?")}});