!function(e){var n={};function t(r){if(n[r])return n[r].exports;var s=n[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./src/client/js/wikisearch.js")}({"./src/client/js/wikisearch.js":
/*!*************************************!*\
  !*** ./src/client/js/wikisearch.js ***!
  \*************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _wikisearch = __webpack_require__(/*! ../scss/wikisearch.scss */ "./src/client/scss/wikisearch.scss");\n\nvar _wikisearch2 = _interopRequireDefault(_wikisearch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// to toggle focus on search box - timeout is to allow another function to focus so there isnt a blip in the overlay\nfunction toggleOverlay() {\n  setTimeout(function () {\n    if ($(".search-input").is(":focus")) {\n      $(".prompt, button[type=\'submit\']").addClass("highlight-text");\n      $(".search-label").addClass("search-overlay");\n    } else {\n      $(".prompt, button[type=\'submit\']").removeClass("highlight-text");\n      $(".search-label").removeClass("search-overlay");\n    }\n  }, 120);\n} //Developed by Adam Tarrant - 2017\n\nfunction moveSearchInput() {\n  $(".wrapper > h1").addClass("results-show-h1");\n}\n\n//toggles cancel icon and also resets any invalid input warnings\nfunction toggleClearIcon(e) {\n  $(".search-input").removeClass("invalid-q").attr("placeholder", "Please enter your query");\n  if ($(".search-input").val().length !== 0 && e.type !== "reset") {\n    $("button[type=\'reset\']").addClass("clear-icon");\n  } else {\n    $("button[type=\'reset\']").removeClass("clear-icon");\n    $(".search-input").focus();\n    $("#spinner").removeClass("loader");\n  }\n}\n\n// call Wikipedia API with input from search field on page. Success function clears element before starting. start of function inserts loader icon\nfunction callWiki(formInput) {\n  if (formInput == "") {\n    $(".search-input").addClass("invalid-q").attr("placeholder", "Please enter a query!");\n  } else {\n    $("#spinner").addClass("loader");\n    var queryString = formInput.replace(/\\s+/g, "+");\n    fetch(\'/wikisearch/search?q=\' + queryString).then(function (response) {\n      return response.json();\n    }).then(function (searchResults) {\n      var pageResults = searchResults.query.pages;\n      // empty contents from previous searches\n      $(".results-container").empty();\n      $.each(pageResults, updatePageResult);\n    });\n  }\n}\n\n// populate results container element with search results - li items and uses moveSearchINput function to move to make room\nfunction updatePageResult() {\n  moveSearchInput();\n  var wikiLink = "https://en.wikipedia.org/?curid=" + this.pageid;\n  var pageTitle = this.title;\n  var extract = this.extract;\n  // if statement to capture undefined thumbnails as not all articles have them\n  if (this.thumbnail == undefined) {\n    var thumb = " ";\n  } else {\n    var thumb = this.thumbnail.source;\n  }\n  $("#spinner").removeClass("loader");\n  $(".results-container").append(\'<li class="results-item flex-item"><a href="\' + wikiLink + \'"target="_blank"><h3>\' + pageTitle + \'</h3><img src="\' + thumb + \'"><p>\' + extract + "</p></a></li>");\n}\n\n// main function includes all event listeners on the page to trigger functions/event handlers\n$(document).ready(function () {\n  $("input[name=\'query\']").on(\'focusin blur\', function () {\n    toggleOverlay();\n  });\n  $("input[name=\'query\']").on(\'input\', function (e) {\n    toggleClearIcon(e);\n  });\n  $("#queryForm").on(\'reset\', function (e) {\n    toggleClearIcon(e);\n  });\n  $("#queryForm").submit(function (e) {\n    e.preventDefault();\n    $(".search-input").blur();\n    var formInput = $("input[name=\'query\']").val();\n    callWiki(formInput);\n  });\n});\n\n//# sourceURL=webpack:///./src/client/js/wikisearch.js?')},"./src/client/scss/wikisearch.scss":
/*!*****************************************!*\
  !*** ./src/client/scss/wikisearch.scss ***!
  \*****************************************/
/*! no static exports found */function(module,exports){eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/client/scss/wikisearch.scss?")}});